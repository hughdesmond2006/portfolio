<div class="comingsoon">
    <div class="comingsoon_text">
        Mobile site coming soon..
    </div>
</div>

<!--<div class="pimg1">
    <div class="ptext">
        <span class="border">
            Hugh Desmond
        </span>
    </div>
</div>-->


<!-- data-aos="flip-right"
         data-aos-mirror="true"
         data-aos-once="false"
         data-aos-easing="ease-in-out"
         data-aos-anchor-placement="top-bottom"
         data-aos-offset="200"-->
<section class="section section-light" id="section1">
    <div id="hugh1" >
        <div class="body">
            <div class="head_container">
                <div class="head">
                    <div class="hairs">
                        <div class="hair one anim_blow"></div>
                        <div class="hair two anim_blow"></div>
                        <div class="hair three anim_blow"></div>
                        <div class="hair four anim_blow"></div>
                        <div class="hair five anim_blow"></div>
                        <div class="hair six anim_blow"></div>
                        <div class="hair seven anim_blow"></div>
                        <div class="hair eight anim_blow"></div>
                    </div>
                    <div class="eye anim_blink" id="left"></div>
                    <div class="eye anim_blink" id="right"></div>
                </div>
            </div>
            <div class="shoe" id="left"></div>
            <div class="shoe" id="right"></div>
            <div class="arm" id="left"></div>
            <div class="arm" id="right"></div>
        </div>
        <div class="board">
            <div class="wheel anim_spin" id="left"></div>
            <div class="wheel anim_spin" id="right"></div>
        </div>
    </div>
</section>

<!--<div class="pimg2">
    <div class="ptext">
        <span class="border">
            Front-End
        </span>
    </div>
</div>-->

<section id="section2" class="section section-dark" >
    <div class="scene1">
        <div class="turtle_container">
            <div class="turtle" id="turtle1" >
                <div class="count" data-aos="flip-right"
                     data-aos-offset="435">5</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
            <div class="turtle" id="turtle2" >
                <div class="count" data-aos="flip-right"
                     data-aos-offset="410">4</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
            <div class="turtle" id="turtle3" >
                <div class="count" data-aos="flip-right"
                     data-aos-offset="385">3</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
            <div class="turtle" id="turtle4" >
                <div class="count" data-aos="flip-right"
                     data-aos-offset="360">2</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
            <div class="turtle" id="turtle5" >
                <div class="count" data-aos="flip-right"
                     data-aos-offset="330">1</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
        </div>
        <div class="big_heading" id="years">Years</div>
        <div class="big_heading" id="in">in</div>
        <div class="big_heading" id="university">University</div>
        <div id="hugh2" >
            <div class="body">
                <div class="head_container">
                    <div class="head">
                        <div class="hairs">
                            <div class="hair one anim_blow"></div>
                            <div class="hair two anim_blow"></div>
                            <div class="hair three anim_blow"></div>
                            <div class="hair four anim_blow"></div>
                            <div class="hair five anim_blow"></div>
                            <div class="hair six anim_blow"></div>
                            <div class="hair seven anim_blow"></div>
                            <div class="hair eight anim_blow"></div>
                        </div>
                        <div class="eye anim_blink" id="left"></div>
                        <div class="eye anim_blink" id="right"></div>
                    </div>
                </div>
                <div class="shoe" id="left"></div>
                <div class="shoe" id="right"></div>
                <div class="arm" id="left"></div>
                <div class="arm" id="right"></div>
            </div>
            <div class="board">
                <div class="wheel" id="left"></div>
                <div class="wheel" id="right"></div>
            </div>
        </div>
    </div>
    <div class="scene2">
        <div class="turtle_container2">
            <div class="turtle" id="turtle1" >
                <div class="count" data-aos="flip-left"
                     data-aos-offset="345">1</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
            <div class="turtle" id="turtle2" >
                <div class="count" data-aos="flip-left"
                     data-aos-offset="375">2</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
            <div class="turtle" id="turtle3" >
                <div class="count" data-aos="flip-left"
                     data-aos-offset="400">3</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
            <div class="turtle" id="turtle4" >
                <div class="count" data-aos="flip-left"
                     data-aos-offset="425">4</div>
                <div class="tbody">
                    <div class="thead">
                        <div class="teye anim_blink" id="left"></div>
                        <div class="teye anim_blink" id="right"></div>
                    </div>
                    <div class="tfoot" id="left"></div>
                    <div class="tfoot" id="right"></div>
                </div>
            </div>
        </div>
        <div class="big_heading" id="years">Years</div>
        <div class="big_heading" id="in">in</div>
        <div class="big_heading" id="university">Industry</div>
        <div id="hugh3" >
            <div class="body">
                <div class="head_container">
                    <div class="head">
                        <div class="hairs">
                            <div class="hair one anim_blow"></div>
                            <div class="hair two anim_blow"></div>
                            <div class="hair three anim_blow"></div>
                            <div class="hair four anim_blow"></div>
                            <div class="hair five anim_blow"></div>
                            <div class="hair six anim_blow"></div>
                            <div class="hair seven anim_blow"></div>
                            <div class="hair eight anim_blow"></div>
                        </div>
                        <div class="eye anim_blink" id="left"></div>
                        <div class="eye anim_blink" id="right"></div>
                    </div>
                </div>
                <div class="shoe" id="left"></div>
                <div class="shoe" id="right"></div>
                <div class="arm" id="left"></div>
                <div class="arm" id="right"></div>
            </div>
            <div class="board">
                <div class="wheel" id="left"></div>
                <div class="wheel" id="right"></div>
            </div>
        </div>
    </div>
</section>

<section id="section5" class="section">
    <div class="scene4">
        <div class="sales_text_wrapper">
            <div class="big_heading font_black" id="I">I</div>
            <div class="big_heading font_black" id="worked">Worked</div>
            <div class="big_heading font_black" id="on">on</div>
            <div class="big_heading font_black" id="a">a</div>
            <div class="big_heading font_black" id="sales">Sales App</div>
        </div>
        <div id="lemonade_stand"></div>
        <div id="jim" >
            <div class="body">
                <div class="head_container">
                    <div class="head">
                        <div class="hairs"></div>
                        <div class="eye anim_blink" id="left"></div>
                        <div class="eye anim_blink" id="right"></div>
                    </div>
                </div>
                <div class="shoe" id="left"></div>
                <div class="shoe" id="right"></div>
                <div class="arm" id="left"></div>
                <div class="arm" id="right">
                    <div class="cup"></div>
                </div>
            </div>
        </div>
        <div id="tim" >
            <div class="body">
                <div class="head_container">
                    <div class="head">
                        <div class="hairs"></div>
                        <div class="eye anim_blink" id="left"></div>
                        <div class="eye anim_blink" id="right"></div>
                    </div>
                </div>
                <div class="shoe" id="left"></div>
                <div class="shoe" id="right"></div>
                <div class="arm" id="left">
                    <!--<div class="tablet"></div>-->
                </div>
                <div class="arm" id="right"></div>
            </div>
        </div>
    </div>
    <div id="slideshow">
        <div class="slide_container">
            <div class="slide_reel">
                <div class="slide s1"></div>
                <div class="slide s2"></div>
                <div class="slide s3"></div>
                <div class="slide s4"></div>
            </div>
        </div>
        <div class="bar"></div>
        <div class="overlay"></div>
    </div>
    <div class="swipe_hand"></div>
</section>

<section id="section4" class="section section-dark">
    <div class="scene3">
        <div class="big_heading" id="I">I</div>
        <div class="big_heading font_black" id="ware">Warehouse</div>
        <div class="big_heading" id="tested">Tested</div>
        <div class="big_heading font_black" id="robotics">Robotics</div>
        <div id="warehouse">
            <div id="table">
                <div class="tr">
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                </div>
                <div class="tr">
                    <div class="td"><div id="ball"></div></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                </div>
                <div class="tr">
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                </div>
                <div class="tr">
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                </div>
                <div class="tr">
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td rack"></div>
                </div>
                <div class="tr">
                    <div class="td rack"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                    <div class="td"></div>
                </div>
                <div class="tr">
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                    <div class="td rack"></div>
                </div>
            </div>
            <div id="goal">
                <div id="pulsating-circle"></div>
                <div id="ballPlaceHolder2"></div>
            </div>
            <div id="robot">
                <div id="robo_arm">
                    <div class="stem"></div>
                    <div class="finger_wrapper">
                        <div class="finger f1" id="left"></div>
                        <div class="finger f2" id="left"></div>
                        <div class="finger f1" id="right"></div>
                        <div class="finger f2" id="right"></div>
                        <div id="ballPlaceHolder"></div>
                    </div>
                </div>
                <div class="tracks">
                    <div class="chassis"></div>
                </div>
            </div>
        </div>
        <div id="controller">
            <div class="aerial_wrapper">
                <div class="line_wrapper">
                    <div class="line" id="part4"></div>
                    <div class="line" id="part3"></div>
                    <div class="line" id="part2"></div>
                    <div class="line" id="part1"></div>
                    <div class="bulb"></div>
                </div>
                <div class="stump"></div>
            </div>
            <div class="pad">
                <div class="arrow_wrapper">
                    <div class="arrow clicky" id="a_up" onclick="move(direction.up)"></div>
                    <div class="arrow clicky" id="a_left" onclick="move(direction.left)"></div>
                    <div class="arrow clicky" id="a_right" onclick="move(direction.right)"></div>
                    <div class="arrow clicky" id="a_down" onclick="move(direction.down)"></div>
                </div>
                <div class="controls_wrapper">
                    <div class="buttons_wrapper">
                        <div class="button b_l clicky" id="left" onclick="grab()"></div>
                        <div class="button b_r clicky" id="right" onclick="drop()"></div>
                    </div>
                    <div class="slider_wrapper">
                        <div class="line" id="slider_line"></div>
                        <div class="knob clicky" id="slider_knob"></div>
                    </div>
                </div>
                <div id="click_me">Click me!</div>
            </div>
        </div>
    </div>
</section>

<section id="section7" class="section">
    <div class="scene6">
        <div class="big_heading font_black" id="I">I</div>
        <div class="big_heading font_black" id="created">Created</div>
        <div class="big_heading font_black" id="a2">a</div>
        <div class="big_heading font_black" id="game">Game</div>
        <div class="video_wrapper">
            <video id="game_video" muted autoplay loop>
                <source src="../images/trailer1.mp4">
            </video>
            <a href="#" class="speaker">
                <span></span>
            </a>
            <div class="game_cover"></div>
        </div>
    </div>
</section>

<section id="section6" class="section" onmousedown="fire()">
    <div class="skill_text_wrapper">
        <div class="big_heading" id="test">Test</div>
        <div class="big_heading" id="your">your</div>
        <div class="big_heading" id="against">against</div>
        <div class="big_heading" id="skills">Skills</div>
        <div class="big_heading" id="mine">Mine</div>
    </div>
    <div class="scene5">
        <div class="drone d1">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour1" onmousedown="shoot(this)">React</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d2">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour2" onmousedown="shoot(this)">CSS3</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d3">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour3" onmousedown="shoot(this)">Javascript</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d4">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour4" onmousedown="shoot(this)">REST</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d5">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour5" onmousedown="shoot(this)">Android</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d6">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour6" onmousedown="shoot(this)">Java</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d7">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour7" onmousedown="shoot(this)">C#</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d8">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour8" onmousedown="shoot(this)">Wordpress</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d9">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour9" onmousedown="shoot(this)">Node.js</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d10">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour10" onmousedown="shoot(this)">MongoDB</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d11">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour10" onmousedown="shoot(this)">Docker</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d12">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour9" onmousedown="shoot(this)">XNA Framework</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d13">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour8" onmousedown="shoot(this)">Perl</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d14">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour7" onmousedown="shoot(this)">HTML5</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d15">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour6" onmousedown="shoot(this)">Webpack</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d16">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour5" onmousedown="shoot(this)">Handlebars</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d17">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour4" onmousedown="shoot(this)">GIT</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d18">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour3" onmousedown="shoot(this)">PHP</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d19">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour2" onmousedown="shoot(this)">MySQL</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
        <div class="drone d20">
            <div class="skill_wrapper rocking">
                <div class="rope"></div>
                <div class="skill colour1" onmousedown="shoot(this)">Regex</div>
            </div>
            <div class="dbody">
                <div class="dwing" id="left"></div>
                <div class="dwing" id="right"></div>
            </div>
        </div>
    </div>
    <div class="crosshair"></div>
    <audio id="audio" src="../images/gun_shot.mp3"></audio>
</section>

<!--<div class="pimg3">
    <div class="ptext">
        <span class="border">
            Back-End
        </span>
    </div>
</div>-->

<section id="section8" class="section section-light">
    <div id="hugh1" >
        <div class="body">
            <div class="head_container">
                <div class="head">
                    <div class="hairs">
                        <div class="hair one anim_blow"></div>
                        <div class="hair two anim_blow"></div>
                        <div class="hair three anim_blow"></div>
                        <div class="hair four anim_blow"></div>
                        <div class="hair five anim_blow"></div>
                        <div class="hair six anim_blow"></div>
                        <div class="hair seven anim_blow"></div>
                        <div class="hair eight anim_blow"></div>
                    </div>
                    <div class="eye anim_blink" id="left"></div>
                    <div class="eye anim_blink" id="right"></div>
                </div>
            </div>
            <div class="shoe" id="left"></div>
            <div class="shoe" id="right"></div>
            <div class="arm" id="left"></div>
            <div class="arm" id="right"></div>
        </div>
        <div class="board">
            <div class="wheel anim_spin" id="left"></div>
            <div class="wheel anim_spin" id="right"></div>
        </div>
    </div>
</section>

<!--<div class="pimg1">
    <div class="ptext">
        <span class="border">
            Hugh Desmond
        </span>
    </div>
</div>-->



<script>
    $(function () { // wait for document ready
        // init
        var controller = new ScrollMagic.Controller();

        //throw tablet to fullscreen
        TweenMax.to("#slideshow", 0, {opacity: 1});
        let tabletAnim = TweenMax.from("#slideshow", 1.2, {opacity: 1, scaleX: .07, scaleY: .085, skewX: 20, x:14, y: -82, ease:Power1.easeOut}, 1);

        new ScrollMagic.Scene({triggerElement: "#section5",offset: 750})
                .setTween(tabletAnim)
                .addTo(controller);

        //fade out sales text
        let textFadeAnim = TweenMax.to(".sales_text_wrapper", .4, {opacity: 0});

        new ScrollMagic.Scene({triggerElement: "#section5", offset: 750})
                .setTween(textFadeAnim)
                .addTo(controller);

        //fade out skills text
        let skillTextFadeAnim = TweenMax.to(".skill_text_wrapper", .4, {opacity: 0});

        new ScrollMagic.Scene({triggerElement: "#section6", offset: 100})
                .setTween(skillTextFadeAnim)
                .triggerHook(0)
                .addTo(controller);

        //pin section6
        new ScrollMagic.Scene({triggerElement: "#section6",offset: 100, duration: 150})
                .setPin("#section6")
                //.addIndicators()
                .triggerHook(0)
                .addTo(controller);

        //build skate jump tween
        var skateTween = TweenMax.to("#hugh2",8,{bezier:{type:"soft", values:[{x:-320, y:0}, {x:-640, y:-140}, {x:-960, y:0}, {x:-1280, y:0} /**, {x:-1440, y:0}**/ ], autoRotate:180}, ease:Power0.easeNone});

        //build skate jump scene
        new ScrollMagic.Scene({triggerElement: ".turtle_container", duration: 400, offset: -200})
                .setTween(skateTween)
                //.setPin("#hugh2", {pushFollowers: false}) ...
                .addTo(controller);

        //skate fades
        var tl = new TimelineMax();
        tl.to("#hugh2" , .5, { opacity:1 , ease:Power4.easeIn })
                .to("#hugh2" , 4, {  opacity:1 })
                .to("#hugh2" , 4.5, {  opacity:0 , ease:Power4.easeIn});

        new ScrollMagic.Scene({triggerElement: ".turtle_container", duration: 400, offset: -200})
                .setTween(tl)
                .addTo(controller);

        //wheel spin
        var wheelSpinTween = TweenMax.to("#hugh2 .wheel",8,{rotation: -2160, ease:Power0.easeNone});

        new ScrollMagic.Scene({triggerElement: ".turtle_container", duration: 400, offset: -200})
                .setTween(wheelSpinTween)
                .addTo(controller);

        //2nd skate jump tween & scene
        var skateTween2 = TweenMax.to("#hugh3",8,{bezier:{type:"soft", values:[{x:-320, y:0}, {x:-640, y:-140}, {x:-960, y:0}, {x:-1280, y:0} /**, {x:-1440, y:0}**/ ], autoRotate:180}, ease:Power0.easeNone});
        skateTween2.reverse();

        new ScrollMagic.Scene({triggerElement: ".turtle_container2", duration: 400, offset: -200})
                .setTween(skateTween2)
                .addTo(controller);

        //reversed letter fades
        var t2 = new TimelineMax();
        t2.to("#hugh3" , .5, { opacity:1 , ease:Power4.easeIn })
        .to("#hugh3" , 4, {  opacity:1 })
        .to("#hugh3" , 4.5, {  opacity:0 , ease:Power4.easeIn});

        new ScrollMagic.Scene({triggerElement: ".turtle_container2", duration: 400, offset: -200})
        .setTween(t2)
        .addTo(controller);

        //wheel spin
        var wheelSpinTween2 = TweenMax.to("#hugh3 .wheel",8,{rotation: -2160, ease:Power0.easeNone});
        wheelSpinTween2.reverse();

        new ScrollMagic.Scene({triggerElement: ".turtle_container2", duration: 400, offset: -200})
        .setTween(wheelSpinTween2)
        .addTo(controller);

        //set trigger for robot section grows
        const roboTrigger = "#section4";
        const offsetValue = 500;

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle(".pad","grow_pad")
                //.addIndicators()
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle(".arrow_wrapper","rotate_arrows")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#a_left","grow_arrow_left")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#a_up","grow_arrow_up")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#a_right","grow_arrow_right")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#a_down","grow_arrow_down")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle(".b_l","grow_button_left")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle(".b_r","grow_button_right")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#slider_line","grow_slider_line")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#slider_knob","grow_slider_knob")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle(".stump","grow_stump")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#part1","grow_aerial_part1")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#part2","grow_aerial_part2")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#part3","grow_aerial_part3")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#part4","grow_aerial_part4")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle(".line_wrapper","spring_aerial")
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle(".bulb","grow_bulb")
                .reverse(false)
                .addTo(controller);

        let itemsFade = TweenMax.allTo(["#ball", "#robot", "#goal"], 0.5, {opacity:1, delay:1.5});

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setTween(itemsFade)
                .reverse(false)
                .addTo(controller);

        let clickMeFade = TweenMax.allTo(["#click_me"], 0.25, {opacity:1, delay:2.5});

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setTween(clickMeFade)
                .reverse(false)
                .addTo(controller);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setClassToggle("#click_me","click_me_anim")
                .reverse(false)
                .addTo(controller);

        let tileAnim = TweenMax.staggerFrom(".td", 0.03, {opacity:0}, 0.03);

        new ScrollMagic.Scene({triggerElement: roboTrigger, offset: offsetValue})
                .setTween(tileAnim)
                .reverse(false)
                .addTo(controller);

        //pin section5 until slideshow ends
        new ScrollMagic.Scene({triggerElement: "#section5",offset: 450, duration: 1000})
                .setPin("#section5")
                //.addIndicators()
                .triggerHook(0)
                .addTo(controller);

        //screenshot slide anim
        //let slideAnim = TweenMax.to(".slide_reel", .5, {left: -768, ease:Power3.easeInOut});
        //let slideAnim2 = TweenMax.to(".slide_reel", .5, {left: -1536, ease:Power3.easeInOut});
        //let slideAnim3 = TweenMax.to(".slide_reel", .5, {left: -2304, ease:Power3.easeInOut});

        //timeline
        let slideTimeLine = new TimelineMax();
        slideTimeLine.to(".slide_reel" , .5, {x: 0})
                .to(".slide_reel" , 1.5, {x: -768, ease:Power1.easeInOut})
                .to(".slide_reel" , 2, {x: -768})
                .to(".slide_reel" , 3, {x: -1536, ease:Power1.easeInOut})
                .to(".slide_reel" , 3.5, {x: -1536})
                .to(".slide_reel" , 4.5, {x: -2304, ease:Power1.easeInOut})
                .to(".slide_reel" , 5, {x: -2304});

        new ScrollMagic.Scene({triggerElement: "#section5",offset: 550, duration: 1000})
                .setTween(slideTimeLine)
                //.addIndicators()
                .triggerHook(0)
                .addTo(controller);

        let swipeTimeLine = new TimelineMax();
        swipeTimeLine.to(".swipe_hand" , .5, {opacity: 1, x: 384})
                .to(".swipe_hand" , 1, {x: -500, ease:Power1.easeInOut})
                .to(".swipe_hand" , 2, {x: 384, ease:Power1.easeOut})
                .to(".swipe_hand" , 2.5, {x: -500, ease:Power1.easeInOut})
                .to(".swipe_hand" , 3.5, {x: 384, ease:Power1.easeOut})
                .to(".swipe_hand" , 4, {x: -500, ease:Power1.easeInOut})
                .to(".swipe_hand" , 5, {opacity: 0, x: 384, ease:Power1.easeOut});

        new ScrollMagic.Scene({triggerElement: "#section5",offset: 550, duration: 1000})
                .setTween(swipeTimeLine)
                //.addIndicators()
                .triggerHook(0)
                .addTo(controller);

        //------skill game sniper mask stuff--------
        /**let timer;
        let mouseX = 0, mouseY = 0;
        let xp = 0, yp =0;
        let circle = $("#circle");

        function mouseStopped(){
            // if mouse stop moving remove class moving
            // it will hide the circle with opacity transition
            //circle.removeClass('moving');
        }

        $(document).mousemove(function(e){
            // if mouse start moving add class moving
            // it will show the circle with opacity transition
            //circle.addClass('moving');
            // get the mouse position minus 160px to center the circle
            mouseX = e.clientX - 160;
            mouseY = e.clientY - 160;
            // if mouse stop moving clear timer and call mouseStopped function
            clearTimeout(timer);
            timer=setTimeout(mouseStopped,3000);
        });

        // set the momentum with setInterval function
        let loop = setInterval(function(){
            // change 12 to alter damping higher is slower
            xp += ((mouseX - xp)/6);
            yp += ((mouseY - yp)/6);
            circle.css({left: xp +'px', top: yp +'px'});  //
        }, 30);**/
    });

    //robo game code
    const robotDiv = document.getElementsByClassName("tracks");
    const armDiv = document.getElementById("robo_arm");
    const direction = Object.freeze({"left":1, "up":2, "right":3, "down":4});
    let roboPosX = 3;
    let roboPosY = 3;
    let tween;

    //init empty tween
    tween = TweenLite.to(robotDiv, 0, {opacity: 1});

    //data representation of warehouse map layout
    const map = [
        [1,1,1,1,1,1,1],
        [1,0,0,0,0,0,1],
        [1,0,1,0,1,0,1],
        [1,0,0,0,0,0,1],
        [1,0,1,0,1,0,1],
        [1,0,0,0,0,0,0],
        [1,1,1,1,1,1,1]
    ];

    console.log("MAP: ", map);

    function move(direction){
        let oldPosX = roboPosX;
        let oldPosY = roboPosY;
        let translateCode;
        let rotateCode;

        TweenMax.to("#click_me", 0, {opacity:0});

        switch (direction){
            case 1:{
                roboPosX--;
                translateCode = {x:"-=62"};
                rotateCode = {rotation: "180_short"};
                break;
            }
            case 2:{
                roboPosY--;
                translateCode = {y:"-=62"};
                rotateCode = {rotation: "270_short"};
                break;
            }
            case 3:{
                roboPosX++;
                translateCode = {x:"+=62"};
                rotateCode = {rotation: "0_short"};
                break;
            }
            case 4:{
                roboPosY++;
                translateCode = {y:"+=62"};
                rotateCode = {rotation: "90_short"};
                break;
            }
        }

        //if new tile is clear and anim not still running then move
        if(!tween.isActive()){
            tween = TweenLite.to(robotDiv, .2,  rotateCode);

            if(map[roboPosY][roboPosX] === 0){
                tween = TweenLite.to(robotDiv, .2,  translateCode);
                tween = TweenLite.to(armDiv, .2,  translateCode);
            }else{
                roboPosX = oldPosX;
                roboPosY = oldPosY;
            }
        }else{
            roboPosX = oldPosX;
            roboPosY = oldPosY;
        }
    }

    const robotArmDiv = document.getElementById("robo_arm");
    let line = document.getElementById("slider_line");
    let rotationDegrees = 0;

    // Make the slider draggable:
    dragElement(document.getElementById("slider_knob"));

    function dragElement(elmnt) {
        var pos1 = 0, pos3 = 0;

        TweenMax.to("#click_me", 0, {opacity:0});

        //move the DIV from anywhere inside the DIV:
        elmnt.onmousedown = dragMouseDown;

        function dragMouseDown(e) {
            e = e || window.event;
            e.preventDefault();
            // get the mouse cursor position at startup:
            pos3 = e.clientX;
            document.onmouseup = closeDragElement;
            // call a function whenever the cursor moves:
            document.onmousemove = elementDrag;
        }

        function elementDrag(e) {
            e = e || window.event;
            e.preventDefault();

            let lineWidth = line.offsetWidth - elmnt.offsetWidth;
            rotationDegrees = 360/(150/elmnt.offsetLeft);

            //clean up calculation
            if(rotationDegrees < 0 || rotationDegrees > 359){
                rotationDegrees = 0;
            }

            //only drag if still on slider line
            if((elmnt.offsetLeft >= 0 || (pos3 - e.clientX) <= 0) &&
                    (elmnt.offsetLeft < lineWidth|| (pos3 - e.clientX) >= 0)){
                // calculate the new cursor position:
                pos1 = pos3 - e.clientX;
                pos3 = e.clientX;

                // set the element's new position:
                elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
                TweenLite.to(robotArmDiv, 0, {rotation: rotationDegrees});
            }
        }

        function closeDragElement() {
            // stop moving when mouse button is released:
            document.onmouseup = null;
            document.onmousemove = null;
        }
    }

    const ballPlaceHolderDiv = document.getElementById("ballPlaceHolder");
    const ballPlaceHolder2Div = document.getElementById("ballPlaceHolder2");
    const ballDiv = document.getElementById("ball");
    const marker = document.getElementById("pulsating-circle");
    let hasBall = false;

    //move ball into robot arm
    function grab(){
        TweenMax.to("#click_me", 0, {opacity:0});

        if(roboPosX === 1 && roboPosY === 1 && !hasBall && rotationDegrees < 190 && rotationDegrees > 160) {
            ballPlaceHolderDiv.appendChild(ballDiv);
            hasBall = true;
            //remove ball collision
            map[1][0] = 0;
        }
    }

    //drop ball to goal
    function drop(){
        TweenMax.to("#click_me", 0.2, {opacity:0});

        console.log("robo position: x" + roboPosX + " y" + roboPosY);
        console.log("rotateion: " + rotationDegrees);

        if(roboPosX === 6 && roboPosY === 5 && hasBall && (rotationDegrees < 20 || rotationDegrees > 340)) {
            ballPlaceHolder2Div.appendChild(ballDiv);
            marker.remove();
            hasBall = false;
        }
    }

    let video = document.getElementById('game_video');
    let speaker = document.getElementsByClassName('.speaker');

    video.volume = 0.5;

    //start video muted
    $('.speaker').click(function(e) {
        e.preventDefault();

        video.muted = !video.muted;

        $(this).toggleClass('mute');
    }).addClass('mute');

    let skillsSection = document.querySelector('#section6')
    let skillsScene = document.querySelector('.scene5');
    let crosshair = document.querySelector('.crosshair');
    const RADIUS = 200;
    const crosshairOffset = 4;
    const sectionPageYOffset = 6660;
    let x;
    let y;

    $(document).mousemove(function(e){
        x = e.pageX - crosshairOffset;
        y = (e.clientY - skillsSection.getBoundingClientRect().y) - crosshairOffset;

        let circle = `circle(${RADIUS}px at ${x}px ${y}px)`;
        skillsScene.style['-webkit-clip-path'] = circle;
        skillsScene.style['clip-path'] = circle;

        crosshair.style.top = y + 'px';
        crosshair.style.left = x + 'px';
    });

    let audio = document.getElementById("audio");
    audio.preload = "auto";

    function fire() {
        audio.load();
        audio.play();

        TweenMax.allTo('.scene5', .1, {webkitClipPath: `circle(${RADIUS}px at ${x}px ${y - 20}px)`});
        TweenMax.to(".crosshair", .1, {y: -7});

        TweenMax.allTo('.scene5', .1, {webkitClipPath: `circle(${RADIUS}px at ${x}px ${y}px)`, delay: .1});
        TweenMax.to(".crosshair", .1, {y: 0, delay: .1});
    }

    function shoot(skill){
        if(skill.parentNode.classList.contains('rocking')) {
            skill.parentNode.classList.remove('rocking');
            skillsScene.append(skill);

            skill.style.position = "absolute";
            skill.style.top = (parseInt(crosshair.style.top, 10) - (skill.offsetHeight / 2)) + "px";
            skill.style.left = (parseInt(crosshair.style.left, 10) - (skill.offsetWidth / 2)) + "px";

            skill.classList.add('shot');
        }
    }




    /* USEFUL STUFF MAYBE?
    //custom trigger anim
    var controller = new ScrollMagic.Controller();

    var scene = new ScrollMagic.Scene({triggerElement: "#section2"})
            .setClassToggle("#section2","make_orange")
            .addIndicators({name: "1 - add a class"})
            .addTo(controller);

    //section slide effect
    $(function () { // wait for document ready
        // init
        var controller = new ScrollMagic.Controller({
            globalSceneOptions: {
                triggerHook: 'onLeave'
            }
        });

        // get all slides
        var slides = document.querySelectorAll("section");

        // create scene for every slide
        for (var i=0; i<slides.length; i++) {
            new ScrollMagic.Scene({
                triggerElement: slides[i]
            })
                    .setPin(slides[i])
                    .addIndicators() // add indicators (requires plugin)
                    .addTo(controller);
        }
    });
    */
</script>